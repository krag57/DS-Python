Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 	PK: id
ii. Hours = 1562 		FK: business_id
iii. Category = 2643 	FK: business_id
iv. Attribute = 1115	FK: business_id
v. Review = 10000		PK: id
vi. Checkin = 493		FK: business_id
vii. Photo = 10000 		PK: id
viii. Tip = 537			FK: user_id
ix. User = 10000 		PK: id
x. Friend = 11			FK: user_id
xi. Elite_years = 2780 	FK: user_id

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
	select *
		from  user
		where 	id is null
				or name is null
				or review_count is null
				or yelping_since is null
				or useful is null
				or funny is null
				or cool is null
				or fans is null
				or average_stars is null
				or compliment_hot is null
				or compliment_more is null
				or compliment_profile is null
				or compliment_cute is null
				or compliment_list is null
				or compliment_note is null
				or compliment_plain is null
				or compliment_cool is null
				or compliment_funny is null
				or compliment_writer is null
				or compliment_photos is null
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0		max: 5.0		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	select city,sum(review_count) as Total_review
	from business
	group by city
	order by Total_review DESC
	
	Copy and Paste the Result Below:
	+-----------------+--------------+
	| city            | Total_review |
	+-----------------+--------------+
	| Las Vegas       |        82854 |
	| Phoenix         |        34503 |
	| Toronto         |        24113 |
	| Scottsdale      |        20614 |
	| Charlotte       |        12523 |
	| Henderson       |        10871 |
	| Tempe           |        10504 |
	| Pittsburgh      |         9798 |
	| Montréal        |         9448 |
	| Chandler        |         8112 |
	| Mesa            |         6875 |
	| Gilbert         |         6380 |
	| Cleveland       |         5593 |
	| Madison         |         5265 |
	| Glendale        |         4406 |
	| Mississauga     |         3814 |
	| Edinburgh       |         2792 |
	| Peoria          |         2624 |
	| North Las Vegas |         2438 |
	| Markham         |         2352 |
	| Champaign       |         2029 |
	| Stuttgart       |         1849 |
	| Surprise        |         1520 |
	| Lakewood        |         1465 |
	| Goodyear        |         1155 |
	+-----------------+--------------+
	(Output limit exceeded, 25 of 362 total rows shown)
	
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	select stars, count(stars) as counts
	from business
	where city='Avon'
	group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
	+-------+--------+
	| stars | counts |
	+-------+--------+
	|   1.5 |      1 |
	|   2.5 |      2 |
	|   3.5 |      3 |
	|   4.0 |      2 |
	|   4.5 |      1 |
	|   5.0 |      1 |
	+-------+--------+

ii. Beachwood

SQL code used to arrive at answer:
	select stars, count(stars) as counts 
	from business
	where city='Beachwood'
	group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
	+-------+--------+
	| stars | counts |
	+-------+--------+
	|   2.0 |      1 |
	|   2.5 |      1 |
	|   3.0 |      2 |
	|   3.5 |      2 |
	|   4.0 |      1 |
	|   4.5 |      2 |
	|   5.0 |      5 |
	+-------+--------+	


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	select name, review_count
	from user
	order by review_count DESC
	limit 3
		
	Copy and Paste the Result Below:
	+--------+--------------+
	| name   | review_count |
	+--------+--------------+
	| Gerald |         2000 |
	| Sara   |         1629 |
	| Yuri   |         1339 |
	+--------+--------------+	


8. Does posing more reviews correlate with more fans?
	No
	Please explain your findings and interpretation of the results:
	Look at the following query;
	It cleary shows there is no correlation between review_count and fans.
	Gerald posed more reviews and has less fans compared to Amy where she posed only quarter amount of Gerald
	
	SQL code:
	select name, review_count, fans
	from user
	order by fans DESC
	limit 10
	
	Result:
	+-----------+--------------+------+
	| name      | review_count | fans |
	+-----------+--------------+------+
	| Amy       |          609 |  503 |
	| Mimi      |          968 |  497 |
	| Harald    |         1153 |  311 |
	| Gerald    |         2000 |  253 |
	| Christine |          930 |  173 |
	| Lisa      |          813 |  159 |
	| Cat       |          377 |  133 |
	| William   |         1215 |  126 |
	| Fran      |          862 |  124 |
	| Lissa     |          834 |  120 |
	+-----------+--------------+------+
	
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	love
	because there are 1780 words with love and 232 with hate in it.
	
	SQL code used to arrive at answer:
	
	--code to find how many reviews with word love in it
	select count(*)
	from review
	where text like '%love%'
	
	--code to find how many reviews with word hate in it
	select count(*)
	from review
	where text like '%hate%'
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	select name, fans
	from user
	order by fans DESC
	limit 10
	
	Copy and Paste the Result Below:
	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+
	
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
	select name,useful+funny,fans,
	(useful+funny)*1./(useful+funny+cool+fans)*100 as per --percent listed useful or funny
	from user
	order by fans DESC
	limit 10
	
	Copy and Paste the Result Below:
	+-----------+--------------+------+---------------+
	| name      | useful+funny | fans |           per |
	+-----------+--------------+------+---------------+
	| Amy       |         5780 |  503 | 63.9805180429 |
	| Mimi      |          395 |  497 | 37.5832540438 |
	| Harald    |       245340 |  311 |  66.570612225 |
	| Gerald    |        19848 |  253 | 56.5325130308 |
	| Christine |        11480 |  173 | 71.8667835232 |
	| Lisa      |           61 |  159 | 26.9911504425 |
	| Cat       |         1734 |  133 | 58.9194699286 |
	| William   |        18724 |  126 | 66.3501063076 |
	| Fran      |        17457 |  124 | 64.8356545961 |
	| Lissa     |          605 |  120 | 56.7010309278 |
	+-----------+--------------+------+---------------+
	
	Please explain your findings and interpretation of the results:
	Yes, 
	There is a relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny",
	except for user Lisa. We may cosider that instance as an outlier. In the table it is somewhat clear that increasing in listing
	funny or useful considerbly increase the fan base. 
	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	We analysed the restaurants in the Las Vegas city. The group 4-5 has shorter business hours than that of group 2-3.

ii. Do the two groups you chose to analyze have a different number of reviews?
     Yes. The group 4-5 has almost 936 reviews and 2-3 has  only about 123    
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	No: Its hard to infer anything, as they might be in differe locations.
SQL code used for analysis:
	select b.city, c.category,sum (distinct b.review_count) as review_Count, postal_code,
		  case 
			when b.stars between 2 and 3 then 1
			when b.stars between 4 and 5 then 2
		  end star_groups,
		  
		  /* the following categories of hours have been defined, by looking at the hours columns. The ones who have shorter open times considered as short and the others as longer. */
		  
		  case 
		  when hours like '%20:00' then 'short'
		  when hours like '%14:00' then 'short'
		  when hours like '%23:00' then 'short'
		  else 'long'
		  end hours_cat
		  
	from business b 
		inner join category c 
		  on b.id=c.business_id
		inner join hours h
		  on h.business_id=b.id
	  where b.city ='Las Vegas' and category like '%restaurants%'
	group by star_groups


		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
     The average review count differs as follows
		Open: 31.757
		Closed: 23.198
         
ii. Difference 2:
     The average star rating differs as follows
		Open: 3.679
        Closed: 3.520
         
SQL code used for analysis:
	select avg(review_count), avg(stars),is_open
	from business
	group by is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
     Analyzing the reason for closure of restaurants    
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
     I planned to analyze the reasons for the closure of restaurants. For this I considered the name, stars,review_count, is_open columns of business table and text of review table.
	 There may be several other reasons for these closures but they are hard to apply without more information or data. For an instance it is a known fact that businesses close
	 because of the location, and competetive businesses nearby. In the given dataset it is hard to extract these information. Therefore I have used only those columns.
	 
	 I found that from these star ratings ,that all the closed restaurants had pretty low ratings. in contrast there are few restaurants closed despite the fact they had good reviews and ratings.  
     Even-though some restaurants had high ratings, their review_count is low.             
iii. Output of your finished dataset:
    +-----------------------------------+---------+--------------+----------+--------------+
	| name                              | is_open | avg(b.stars) | re_class | review_count |
	+-----------------------------------+---------+--------------+----------+--------------+
	| B&B Theatres Mesa Gateway 12 IMAX |       0 |          2.0 | low      |           48 |
	| China Joy                         |       0 |          2.5 | low      |           26 |
	| Dal Toro Ristorante               |       0 |          2.5 | low      |          324 |
	| Indochine Grill                   |       0 |          2.5 | low      |            3 |
	| Mad Tex Restaurant                |       0 |          2.5 | low      |           15 |
	| Rainforest Café                   |       0 |          2.5 | low      |          444 |
	| Rock & Rita's                     |       0 |          2.5 | low      |           96 |
	| Sinobi                            |       0 |          2.5 | low      |           11 |
	| The Big Tin Shed                  |       0 |          2.5 | low      |           14 |
	| 5 & Diner                         |       0 |          3.0 | low      |           13 |
	| Babe's Cabaret                    |       0 |          3.0 | low      |           16 |
	| Burrito Bandito                   |       0 |          3.0 | low      |           22 |
	| MAC Diner                         |       0 |          3.0 | low      |           12 |
	| The Tin Angel                     |       0 |          3.0 | low      |           27 |
	| A Panda Buffet                    |       0 |          3.5 | low      |           11 |
	| Autowits Auto Dealership          |       0 |          3.5 | low      |            3 |
	| Baja Fresh Mexican Grill          |       0 |          3.5 | low      |           38 |
	| Barro's Pizza                     |       0 |          3.5 | low      |           41 |
	| Cabo's Cantina and Grill          |       0 |          3.5 | low      |           24 |
	| Caramel Bar & Lounge              |       0 |          3.5 | low      |           99 |
	| Cinquecento Trattoria             |       0 |          3.5 | low      |           13 |
	| Coach & Willie's                  |       0 |          3.5 | low      |          153 |
	| Crazy Horse Paris                 |       0 |          3.5 | low      |          114 |
	| George's Bar & Grill              |       0 |          3.5 | low      |            3 |
	| Harley's Italian Bistro           |       0 |          3.5 | low      |          163 |
	+-----------------------------------+---------+--------------+----------+--------------+
(Output limit exceeded, 25 of 61 total rows shown)
iv. Provide the SQL code you used to create your final dataset:
	select name, is_open,avg(b.stars),
		case 
		  when avg(b.stars) <= 3.5 then 'low'
		  else 'high'
		end re_class,review_count, r.text

	from business b
		inner join review r 
		  on b.id=r.business_id
	where is_open=0
	  group by name
	  order by avg(b.stars)
