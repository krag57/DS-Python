import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures

line = [int(i) for i in input().split()]
f = line[0]
n = line[1]
dftrain = pd.DataFrame(columns=['f'+str(i) for i in range(f+1)])
for i in range(n):
    dftrain.loc[i] = [float(rf) for rf in input().split()]
train = np.matrix( dftrain )
x = train[:, :f]
y = train[:, f]
poly = PolynomialFeatures(degree=3)
x_ = poly.fit_transform(x)

regression = LinearRegression()
regression.fit(x_, y)

t = int(input())
dftest = pd.DataFrame(columns=['f'+str(i) for i in range(f)])

for i in range(t):
    dftest.loc[i]=[float(rf) for rf in input().split()]
    
test = np.matrix(dftest)
test_ = poly.fit_transform(test)
result = regression.predict(test_)

for i in range(len(result)):
        print(result[i, 0])